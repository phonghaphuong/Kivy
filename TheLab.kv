# KV file sẽ thực thi lệnh sau khi đã chạy hết lệnh file PY

#CanvasExample7:
#CanvasExample6:
#CanvasExample5:
#CanvasExample4:
#CanvasExample3:
#CanvasExample2:
#CanvasExample1:
#ImagesExample:
WidgetsExample:
#PageLayoutExample:
#ScrollViewExample:
#StackLayoutExample:
#GridLayoutExample:
#AnchorLayout:
#MainWidget:
#BoxLayoutExample:

#:set s dp(150)

<CanvasExample3>:
    canvas:
        Line:
            circle: (200, 200, 100) # center_x, center_y, radius
            width:2
        Color:
            rgb: 1, 0, 1 # Hệ màu RGB áp dụng cho các canvas phía sau lênh color
        Line:
            ellipse: (500, 300, 100, 200) # center_x, center_y, radius_x, radius_y
            width:8
        Line:
            rectangle: (800, 100, 300, 200) # x, y, w, h


<CanvasExample2>:
    canvas:
        Line:
            points: (0, self.height/2, self.width, self.height/2)
            width:2
        Line:
            points: (self.width/2, 0, self.width/2, self.height)
            width:2

<CanvasExample1>:
    canvas:
        Rectangle:
            pos: self.center_x -s/2, self.center_y -s/2
            size: s, s
        Ellipse:
            pos: 200, 500
            size: s, s/2
        Line:
            points: (0, 0, self.width/4, 100, self.width/2, 0, self.width*3/4, 100, self.width, 0)
            width: 2 # Độ dày của Line

<ImagesExample@GridLayout>:
    cols: 3
    Image:
        source: "images/cake.jpg"
    Image:
        source: "images/cake.jpg"
        allow_stretch: True
    Image:
        source: "images/cake.jpg"
        allow_stretch: True
        keep_ratio: False

<WidgetsExample>:
    cols: 3
    ToggleButton: # Nút có 02 trạng thái down và normal
        text: "OFF"
        on_state: root.on_toggle_button_state(self)
        size_hint: None, 1
        width: "100dp"
    Button:
        text: "Click here"
        on_press: root.on_button_click()
        disabled: not root.count_enable
    Label:
        text: root.my_text
        font_name: "fonts/Lcd.ttf"
        font_size: "100dp"
        color: 1, 0, 0, 1
    Switch:
        id: my_switch
        on_active: root.on_switch_active(self)
        size_hint: None, 1
        width: "100dp"
    Slider: # Thanh trượt để thay đổi giá trí
        id: my_slider
        min:0
        max:100
        value:50
        on_value:root.on_slider_value(self)
        orientation:"vertical"
        disabled: not my_switch.active
    BoxLayout:
        orientation: "vertical"
        Label:
            text: root.slider_value_txt # hoặc str(int(my_slider.value))
        ProgressBar: # Thanh hiển thị giá trị
            max: 100
            value: my_slider.value
    TextInput:
        id: my_input
        size_hint: None, 1
        width: "100dp"
        text: "Foo"
        multiline: False # không cho phép nhập nhiều dòng
        on_text_validate: root.on_text_validate(self)# Chỉ hiển thị tên khi nhập Enter

    Label:
        text: root.text_input_str




<PageLayoutExample@PageLayout>:
    MainWidget:
    StackLayoutExample:
    GridLayoutExample:
    AnchorLayout:
    BoxLayoutExample:



<ScrollViewExample@ScrollView>:
    StackLayoutExample:
        size_hint: 1, None
        height: self.minimum_height # Hoặc một số bất kỳ


<StackLayoutExample>:
#Layout sẽ tràn từ trên xuống dưới, từ trái qua phải
    orientation: "lr-tb" # Hoặc left to right; top to bottom hoặc đảo chiều nào bạn muốn
    padding: ("20dp", "20dp", "20dp", "20dp") # Căn lề trên dưới trái phải
    spacing: ("20dp", "20dp") # Khoảng cách Horizontal, Vertical

    Button:
        text: "A"
        size_hint: .2, .2
    Button:
        text: "B"
        size_hint: .2, .2
    Button:
        text: "C"
        size_hint: .2, .2
    Button:
        text: "D"
        size_hint: .2, .2
    Button:
        text: "E"
        size_hint: .2, .2
    Button:
        text: "F"
        size_hint: .2, .2


<GridLayoutExample@GridLayout>:
    cols:2
    rows:2
    # Số hàng, số cột; đối tượng vượt quá sẽ nằm ngoài Grid
    # size_hint: chỉ có tác dụng với đối tượng cùng cột; ví dụ chỉ có với Button A sẽ ko hiệu ứng, phải A và C
    # Fix value cột trái; width: "60dp"; size_hint: None, 1
    Button:
        text: "A"
        size_hint: None, 1
        width: "60dp"
    Button:
        text: "B"
    Button:
        text: "C"
        size_hint: 0.5, 1
        width: "60dp"


<AnchorLayout>:
    # right, left, center
    anchor_x: "right"
    # bottom, top, center
    anchor_y: "top"

    Button:
        text: "A"
        size_hint: .1, .1


<BoxLayoutExample>:
    #orientation: "vertical"
    orientation: "horizontal"
    Button:
        text: "A"
        #size: "10dp", "10dp"  #Size để đặt đối tượng cố định nếu đặt "size_hint: None, None"
        size_hint: .5, .2     # 50% theo chiều ngang; 20% theo chiều dọc
        pos_hint: {"y": 0.2} # Cách x =20%
        # Pos_hint
        # Đặt vị trí theo các giá trị x, center_x, right (mặc định là left) => Dùng cho trường hợp vertical
        # Đặt vị trí theo các giá trị y, center_y, top (mặc định là bottom) => Dùng cho trường hợp horizontal

    BoxLayout: #Có thể thiết kế Layout trong layout
        orientation: "vertical"
        spacing: "10dp"
        Button:
            text: "B1"
        Button:
            text: "B2"
        Button:
            text: "B3"

    Button:
        text: "C"

<MainWidget>: # Không sử dụng layout, trình bày trực tiếp trên màn hình chính
    Button:
        text: "Hello"
        size: "100dp", "100dp"
        pos: "300dp", "300dp"
    Button:
        text: "Hello"
        size: "100dp", "100dp"
        pos: "200dp", "200dp"
    Button:
        text: "Hello"
        size: "100dp", "100dp"
        pos: "100dp", "100dp"
        color: 1, 0, 0, 1
    Label:
        text: "Hello"
        size: "100dp", "100dp"
        pos: "0dp", "0dp"
        color: 0, .5, .5, .5

<CanvasExample4>:
    Button:
        pos: 100, 400
        text: "A"
        on_press: root.on_button_a_click()

<CanvasExample6>:
    Button:
        canvas:
# có thể dùng canvas.before hoặc canvas.after
            Rectangle:
        text: "A"

<CanvasExample7>:
    RelativeLayout:
        canvas:
            Color:
                rgb: 0, 0, 1
            Rectangle:
                size: self.size

    RelativeLayout:
        canvas:
            Color:
                rgb: 1, 1, 1
            Rectangle:
                size: self.size

    RelativeLayout:
        canvas:
            Color:
                rgb: 1, 0, 0
            Rectangle:
                size: self.size
